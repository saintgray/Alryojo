<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
		<message-converters>
				<beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<beans:property name="supportedMediaTypes">
						<beans:list>
							<beans:value>text/html; charset=UTF-8</beans:value>
						</beans:list>
					</beans:property>
				</beans:bean>
		</message-converters>
	</annotation-driven>
	
	
	<!-- <beans:bean id="chatservice" class="sockethandler.ChatRoomService2"></beans:bean> -->
	<beans:bean id="echohandler" class="sockethandler.EchoHandler">	</beans:bean>
	
	
	

	<!-- Handling Exception of HTTP GET request "/resources/**" URL-pattern-->
	
	<resources location="/resources/" mapping="/resources/**"/>

	
	<!-- Set Spring ViewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	
	<!-- MultipartResolver bean for fileupload-->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>utf-8</beans:value>
		</beans:property>
	</beans:bean>
	
	<!-- mail Bean 등록 -->
	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" /><!-- 465 or 25 -->
		<beans:property name="username" value="saintgray0@gmail.com" />
		<beans:property name="password" value="tcaisorwrhvdjhlh" />
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
				
				<!-- 구글 TLS 인증 버전과 톰캣 버전을 일치시킬 것 -->
				<beans:prop key="mail.smtp.ssl.protocols">TLSv1.2</beans:prop>
				<beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	
	
<!-- 	<beans:bean id="echohandler" class="com.alj.dream.post.handler.EchoHandler"/>
		 -->
	
	
	<websocket:handlers>
		<websocket:mapping handler="echohandler" path="/echo"/>
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
		<websocket:sockjs/>
	</websocket:handlers>
	
	
	<context:component-scan base-package="com.alj.dream" />
	<context:component-scan base-package="scheduler"/>
	<!-- <context:component-scan base-package="configuration"/> -->

	
	
</beans:beans>
